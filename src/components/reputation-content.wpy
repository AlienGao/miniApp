<style lang='less'>
.user {
  image {
    border-radius: 50%;
    width: 60rpx;
    height: 60rpx;
  }
  text {
    font-size: 30rpx;
    color: #666;
    vertical-align: 16rpx;
    margin-left: 10rpx;
  }
  .time {
    color: #cdcdcd;
    font-size: 24rpx;
    float: right;
  }
}
.showall-container {
  padding: 16rpx;
}
.goodReputation {
  font-size: 26rpx;
  padding-bottom:20rpx;
  border-bottom:2rpx solid #ccc;
  margin-bottom:20rpx;
  &:last-child {
    border: none;
    margin: 0rpx;
    padding: 0rpx;
  }
}
</style>

<template>
  <view class='reputation-content'>
    <view @tap='lookall' wx:if="{{!isShowAll}}">
      <view class='user'>
        <image src='{{filterData.avatarUrl}}' />
        <text>{{filterData.nick}}</text>
        <text class='time'>{{filterData.reputationDate}}</text>
      </view>
      <view class='goodReputation'>
        {{filterData.goodReputationRemark}}
      </view>
    </view>
    <view wx:if='{{isShowAll}}' class='showall-container'>
      <repeat for='{{content}}' key='index' index='index' item='item'>
        <view class='user'>
          <image src='{{item.avatarUrl}}' />
          <text>{{item.nick}}</text>
          <text class='time'>{{item.reputationDate}}</text>
        </view>
        <view class='goodReputation'>
            {{item.goodReputationRemark}}
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy' 

export default class ReputationContent extends wepy.component {
  data = {
    reputation: null,
    content: [],
    filterData: null,
    isShowAll: false
  }
  props = {
    goodId: String
  }
  methods = {
    lookall() {
      wx.navigateTo({
        url: '/pages/all-reputation?id=' + this.goodId
      })
    }
  }
  getReputation (newValue) {
    this.reputation = null
    const that = this
    wepy.request({
      url: 'https://api.it120.cc/' + that.$parent.$parent.globalData.subDomain + '/shop/goods/reputation',
      data: {
        goodsId: newValue
      },
      success: function (res) {
        that.reputation = res.data.data
        that.$apply()
      }
    })
  }
  // type查看选项，showAll是否是查看所有评论页
  getContent (type='all', showAll='false') {
    const that = this
    // 每次筛选初始化
    that.content = []
    that.filterData = null
    that.isShowAll = showAll == 'false' ? false : true
    // 存在reputation
    if (this.reputation && this.reputation.length !== 0) {
      let array = []
      let type2 = []
      let type1 = []
      let type0 = []
      this.reputation.map((item) => {
        if (item.goods.goodReputation == 2) {
          type2.push(item)
        } else if (item.goods.goodReputation == 1) {
          type1.push(item)
        } else {
          type0.push(item)
        }
      })
      array.push(this.reputation.length, type2.length, type1.length, type0.length)
      that.$invoke('../reputation-chioces', 'getlength', array)
      that.$emit('getlength', array)
      // 不是查看所有评论
      if(!that.isShowAll) {
        let user = {}
        // 查看所有选项
        if (type === 'all') {
          user.avatarUrl = this.reputation[0].user.avatarUrl
          user.nick = this.reputation[0].user.nick
          user.reputationDate = this.reputation[0].goods.dateReputation.slice(0, 10)
          user.goodReputationRemark = this.reputation[0].goods.goodReputationRemark
          this.content.push(user)
          // 查看好中差选项
        } else {
          that.reputation.map((item) => {
            if(item.goods.goodReputation == type) {
              that.content.push({
                avatarUrl: item.user.avatarUrl,
                nick: item.user.nick,
                reputationDate: item.goods.dateReputation.slice(0, 10),
                goodReputationRemark: item.goods.goodReputationRemark
              })                
            }
          })
        }
        that.filterData = that.content[0]
        that.$apply() 
        // 查看所有评论
      } else {
        that.reputation.map((item) => {
          if(item.goods.goodReputation == type || type === 'all') {
            that.content.push({
              avatarUrl: item.user.avatarUrl,
              nick: item.user.nick,
              reputationDate: item.goods.dateReputation.slice(0, 10),
              goodReputationRemark: item.goods.goodReputationRemark
            })
          }
        })
        that.$apply()
      }
    } else {
      that.$invoke('../reputation-chioces', 'getlength', [])
      that.$emit('getlength', [])
    }
  }
}
</script>